name: 'deploy-environment'
description: 'Uses Docker Compose with a pre-made or custom Composefile to deploy an environment for later steps'

inputs:
  composefile-path:
    description: Path to Composefile that will be used directly or via merge with a remote file for the deployment
  remote-repository:
    description: Optional GitHub repository containing Composefiles ( org1/repo1 => https://github.com/org1/repo1 )
  remote-deploytoken:
    description: Deploy token that will be used to access the remote repository
  remote-composefile:
    description: Path to the Composefile(s) from the remote repository which should be downloaded
  remote-path:
    description: Path relative to working directory where the files will be placed
  rendered-composefile:
    description: Path where the rendered Composefile should be placed

runs:

  using: 'composite'
  steps:
    - name: Checkout remote
      uses: actions/checkout@v4
      if: ${{ inputs.remote-repository != '' }}
      with:
        repository: ${{ inputs.remote-repository }}
        ssh-key: ${{ inputs.remote-deploytoken }}
        sparse-checkout: ${{ inputs.remote-composefile }}
        sparse-checkout-cone-mode: false
        path: ${{ inputs.remote-path }}
    - name: Render Composefile
      shell: bash
      env:
        RENDERCOMPOSE_OUTFILE: ${{ inputs.rendered-composefile }}
      run: ${GITHUB_ACTION_PATH}/scripts/render-composefile.sh ${{ inputs.remote-path }}${{ inputs.remote-composefile }} ${{ inputs.composefile-path }}
    # - name: Upload rendered Composefile
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: rendered-composefile
    #     path: ${{ inputs.rendered-composefile }}
    - name: Deploy services
      id: deploy-services
      shell: bash
      run: docker compose -f ${{ inputs.rendered-composefile }} up -d
